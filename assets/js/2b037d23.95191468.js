"use strict";(self.webpackChunkprogrammer_zaman_now=self.webpackChunkprogrammer_zaman_now||[]).push([[6709],{3905:function(a,n,e){e.d(n,{Zo:function(){return d},kt:function(){return p}});var t=e(7294);function r(a,n,e){return n in a?Object.defineProperty(a,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):a[n]=e,a}function i(a,n){var e=Object.keys(a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(a);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(a,n).enumerable}))),e.push.apply(e,t)}return e}function l(a){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?i(Object(e),!0).forEach((function(n){r(a,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(e)):i(Object(e)).forEach((function(n){Object.defineProperty(a,n,Object.getOwnPropertyDescriptor(e,n))}))}return a}function o(a,n){if(null==a)return{};var e,t,r=function(a,n){if(null==a)return{};var e,t,r={},i=Object.keys(a);for(t=0;t<i.length;t++)e=i[t],n.indexOf(e)>=0||(r[e]=a[e]);return r}(a,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(a);for(t=0;t<i.length;t++)e=i[t],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(a,e)&&(r[e]=a[e])}return r}var s=t.createContext({}),u=function(a){var n=t.useContext(s),e=n;return a&&(e="function"==typeof a?a(n):l(l({},n),a)),e},d=function(a){var n=u(a.components);return t.createElement(s.Provider,{value:n},a.children)},m={inlineCode:"code",wrapper:function(a){var n=a.children;return t.createElement(t.Fragment,{},n)}},c=t.forwardRef((function(a,n){var e=a.components,r=a.mdxType,i=a.originalType,s=a.parentName,d=o(a,["components","mdxType","originalType","parentName"]),c=u(e),p=r,k=c["".concat(s,".").concat(p)]||c[p]||m[p]||i;return e?t.createElement(k,l(l({ref:n},d),{},{components:e})):t.createElement(k,l({ref:n},d))}));function p(a,n){var e=arguments,r=n&&n.mdxType;if("string"==typeof a||r){var i=e.length,l=new Array(i);l[0]=c;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=a,o.mdxType="string"==typeof a?a:r,l[1]=o;for(var u=2;u<i;u++)l[u]=e[u];return t.createElement.apply(null,l)}return t.createElement.apply(null,e)}c.displayName="MDXCreateElement"},8530:function(a,n,e){e.r(n),e.d(n,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return d},default:function(){return c}});var t=e(7462),r=e(3366),i=(e(7294),e(3905)),l=["components"],o={title:"Kelas Online Pemrograman Java"},s="Kelas Online : Pemrograman Java",u={type:"mdx",permalink:"/kelas-online/java",source:"@site/src/pages/kelas-online/java.md"},d=[{value:"Kenapa Belajar Java?",id:"kenapa-belajar-java",children:[]},{value:"Review Peserta",id:"review-peserta",children:[]},{value:"Keuntungan Gabung Sekarang",id:"keuntungan-gabung-sekarang",children:[]},{value:"Gabung Sekarang",id:"gabung-sekarang",children:[]},{value:"Materi yang Diajarkan",id:"materi-yang-diajarkan",children:[{value:"Java Dasar",id:"java-dasar",children:[]},{value:"Studi Kasus Java Dasar : Aplikasi Todolist",id:"studi-kasus-java-dasar--aplikasi-todolist",children:[]},{value:"Java Object Oriented Programming",id:"java-object-oriented-programming",children:[]},{value:"Java Standard Library",id:"java-standard-library",children:[]},{value:"Studi Kasus Java OOP : Aplikasi Todolist",id:"studi-kasus-java-oop--aplikasi-todolist",children:[]},{value:"Java Generic",id:"java-generic",children:[]},{value:"Java Collection",id:"java-collection",children:[]},{value:"Java Lambda",id:"java-lambda",children:[]},{value:"Apache Maven",id:"apache-maven",children:[]},{value:"Java Unit Test",id:"java-unit-test",children:[]},{value:"Java Stream",id:"java-stream",children:[]},{value:"Java Database",id:"java-database",children:[]},{value:"Studi Kasus Java Database : Aplikasi Todolist",id:"studi-kasus-java-database--aplikasi-todolist",children:[]},{value:"Java Internationalization",id:"java-internationalization",children:[]},{value:"Java Date dan Time",id:"java-date-dan-time",children:[]},{value:"Java Thread",id:"java-thread",children:[]},{value:"Java Reflection",id:"java-reflection",children:[]},{value:"Java Validation",id:"java-validation",children:[]},{value:"Java Lombok",id:"java-lombok",children:[]},{value:"Java Logging",id:"java-logging",children:[]},{value:"Java Persistence API",id:"java-persistence-api",children:[]},{value:"Java Web",id:"java-web",children:[]},{value:"Java RESTful API",id:"java-restful-api",children:[]}]}],m={toc:d};function c(a){var n=a.components,o=(0,r.Z)(a,l);return(0,i.kt)("wrapper",(0,t.Z)({},m,o,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"kelas-online--pemrograman-java"},"Kelas Online : Pemrograman Java"),(0,i.kt)("p",null,"Belajar Java untuk pemula sampai mahir. Di kelas ini kita akan belajar Java dari mulai awal sekali, sehingga cocok untuk pemula."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Java",src:e(6006).Z})),(0,i.kt)("h2",{id:"kenapa-belajar-java"},"Kenapa Belajar Java?"),(0,i.kt)("p",null,"Java saat ini merupakan salah satu bahasa pemrograman yang paling populer di dunia. Banyak sekali perusahaan yang menggunakan\nJava, baik untuk membuat aplikasi web, mobile, sampang menggunakan Java untuk data processing. Java merupakan bahasa pemrograman\nyang ekosistemnya yang terbesar di dunia, sehingga banyak sekali diadopsi oleh perusahaa skala besar."),(0,i.kt)("h2",{id:"review-peserta"},"Review Peserta"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Java",src:e(3811).Z})),(0,i.kt)("h2",{id:"keuntungan-gabung-sekarang"},"Keuntungan Gabung Sekarang"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Harga lebih murah, harga akan di update ketika ada materi baru"),(0,i.kt)("li",{parentName:"ul"},"Update materi GRATIS, tanpa biaya tambahan"),(0,i.kt)("li",{parentName:"ul"},"Grup diskusi sesama peserta di DISCORD")),(0,i.kt)("h2",{id:"gabung-sekarang"},"Gabung Sekarang"),(0,i.kt)("p",null,"Harga Normal : ",(0,i.kt)("del",{parentName:"p"},"Rp. 350.000")),(0,i.kt)("p",null,"Harga Promo : Rp. 99.000"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.programmerzamannow.com/promo/"},"https://www.programmerzamannow.com/promo/")),(0,i.kt)("h2",{id:"materi-yang-diajarkan"},"Materi yang Diajarkan"),(0,i.kt)("p",null,"Kelas Java dibuat dalam bentuk Roadmap, sehingga peserta tidak perlu bingung harus mulai dari mana.\nPeserta akan dibimbing belajar Java secara bertahap, cukup ikuti materi dari awal sampai akhir."),(0,i.kt)("h3",{id:"java-dasar"},"Java Dasar"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Daftar Materi : Java Dasar"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"00:00:00 - Pendahuluan\n00:02:27 - Pengenalan Java\n00:17:10 - Menginstall Java\n00:28:14 - Program Hello World\n00:41:56 - Tipe Data Number\n00:56:59 - Tipe Data Character\n01:00:21 - Tipe Data Boolean\n01:03:00 - Tipe Data String\n01:07:55 - Variable\n01:18:42 - Tipe Data Bukan Primitif\n01:28:00 - Tipe Data Array\n01:42:35 - Operasi Matematika\n01:50:54 - Operasi Perbandingan\n01:53:38 - Operasi Boolean\n01:59:21 - Expression, Statement dan Block\n02:05:55 - If Statement\n02:15:19 - Switch Statement\n02:27:32 - Ternary Operator\n02:31:27 - For Loop\n02:39:07 - While Loop\n02:41:12 - Do While Loop\n02:44:48 - Break dan Continue\n02:50:55 - For Each\n02:55:32 - Method\n03:00:12 - Method Parameter\n03:03:23 - Method Return Value\n03:09:57 - Method Variable Argument\n03:16:24 - Method Overloading\n03:19:34 - Recursive Method\n03:29:00 - Scope\n03:33:28 - Komentar\n03:38:48 - Materi Selanjutnya\n03:39:45 - Penutup\n"))),(0,i.kt)("h3",{id:"studi-kasus-java-dasar--aplikasi-todolist"},"Studi Kasus Java Dasar : Aplikasi Todolist"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Daftar Materi : Studi Kasus Java Dasar : Aplikasi Todolist"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"00:00:00 - Pendahuluan\n00:02:01 - Prototype Aplikasi Todolist\n00:05:54 - Membuat Project\n00:07:31 - Membuat Main Class\n00:09:07 - Model\n00:12:00 - Menentukan Business Logic\n00:14:21 - Menentukan View\n00:17:15 - Menampilkan Todolist\n00:20:36 - Test Menampilkan Todolist\n00:23:03 - Menambah Todolist\n00:29:38 - Test Menambah Todolist\n00:32:42 - Menghapus Todolist\n00:37:38 - Test Menghapus Todolist\n00:45:51 - Input Data\n00:52:00 - View Menampilkan Todolist\n00:56:55 - Test View Menampilkan Todolist\n00:59:31 - View Menambah Todolist\n01:01:45 - Test View Menambah Todolist\n01:03:27 - View Menghapus Todolist\n01:06:36 - Test View Menghapus Todolist\n01:08:51 - Test Seluruh Aplikasi\n01:11:37 - Materi Selanjutnya\n"))),(0,i.kt)("h3",{id:"java-object-oriented-programming"},"Java Object Oriented Programming"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Daftar Materi : Java Object Oriented Programming"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"00:00:00 - Pendahuluan\n00:01:56 - Pengenalan OOP\n00:08:37 - Class\n00:10:48 - Object\n00:13:59 - Field\n00:19:29 - Method\n00:23:35 - Constructor\n00:28:59 - Constructor Overloading\n00:35:41 - Variable Shadowing\n00:39:07 - this Keyword\n00:42:15 - Inheritance\n00:48:23 - Method Overriding\n00:52:32 - super Keyword\n00:57:41 - super Constructor\n01:03:26 - Object Class\n01:08:05 - Polymorphism\n01:16:57 - Type Check dan Casts\n01:21:02 - Variable Hiding\n01:28:47 - Package\n01:33:40 - Access Modifier\n01:42:48 - Import\n01:47:47 - Abstract Class\n01:51:31 - Abstract Method\n01:55:29 - Getter dan Setter\n02:03:10 - Interface\n02:08:11 - Interface Inheritance\n02:12:44 - Default Method\n02:17:06 - toString Method\n02:19:26 - equals Method\n02:30:51 - hashCode Method\n02:35:22 - Final Class\n02:37:50 - Final Method\n02:40:08 - Inner Class\n02:48:01 - Anonymous Class\n02:53:06 - static Keyword\n03:06:07 - Record Class\n03:19:05 - Enum Class\n03:29:19 - Exception\n03:44:41 - Runtime Exception\n03:51:22 - Error\n03:56:08 - StackTraceElement Class\n04:03:07 - Try with Resource\n04:11:13 - Annotation\n04:21:03 - Reflection\n04:31:11 - Materi Selanjutnya\n"))),(0,i.kt)("h3",{id:"java-standard-library"},"Java Standard Library"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Daftar Materi : Java Standard Library"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"00:00:00 - Pendahuluan\n00:02:07 - String Class\n00:10:02 - String Buffer dan String Builder Class\n00:15:30 - StringJoiner Class\n00:19:01 - StringTokenizer Class\n00:22:45 - Number Class\n00:28:45 - Math Class\n00:32:42 - Big Number Class\n00:36:53 - Scanner Class\n00:42:26 - Date dan Calendar Class\n00:50:43 - System Class\n00:55:08 - Runtime Class\n00:58:43 - UUID Class\n01:00:57 - Base64 Class\n01:04:33 - Objects Class\n01:09:54 - Random Class\n01:12:11 - Properties Class\n01:20:55 - Arrays Class\n01:27:10 - Regular Expression\n01:33:41 - Materi Selanjutnya\n"))),(0,i.kt)("h3",{id:"studi-kasus-java-oop--aplikasi-todolist"},"Studi Kasus Java OOP : Aplikasi Todolist"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Daftar Materi : Studi Kasus Java OOP : Aplikasi Todolist"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"00:00:00 - Pendahuluan\n00:01:53 - Clean Architecture\n00:06:46 - Membuat Entity\n00:09:19 - Membuat Repository\n00:12:36 - Membuat Service\n00:16:23 - Repository dan Service Menampilkan TodoList\n00:21:29 - Test Repository dan Service Menampilkan TodoList\n00:27:03 - Repository dan Service Menambah TodoList\n00:32:25 - Test Repository dan Service Menambah TodoList\n00:34:17 - Repository dan Service Menghapus TodoList\n00:37:22 - Test Repository dan Service Menghapus TodoList\n00:39:50 - View Menampilkan TodoList\n00:43:43 - Test View Menampilkan TodoList\n00:46:17 - View Menambah TodoList\n00:47:27 - Test View Menambah TodoList\n00:49:50 - View Menghapus TodoList\n00:51:12 - Test View Menghapus TodoList\n00:53:09 - View Seluruh Aplikasi\n00:56:42 - Materi Selanjutnya\n"))),(0,i.kt)("h3",{id:"java-generic"},"Java Generic"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Daftar Materi : Java Generic"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"00:00:00 - Pendahuluan\n00:02:00 - Pengenalan Generic\n00:06:40 - Generic Class\n00:15:57 - Generic Method\n00:20:56 - Invariant\n00:26:49 - Covariant\n00:32:02 - Contravariant\n00:38:43 - Bounded Type Parameter\n00:48:56 - Wildcard\n00:52:08 - Type Erasure\n00:57:05 - Comparable Interface\n01:03:20 - Comparator Interface\n01:06:42 - Materi Selanjutnya\n"))),(0,i.kt)("h3",{id:"java-collection"},"Java Collection"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Daftar Materi : Java Collection"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"00:00:00 - Pendahuluan\n00:02:05 - Pengenalan Collection\n00:07:11 - Iterable dan Iterator\n00:14:17 - Collection\n00:22:16 - List\n00:35:27 - Immutable List\n00:47:04 - Set\n00:57:22 - Immutable Set\n01:01:06 - SortedSet\n01:08:02 - NavigableSet\n01:14:33 - Queue\n01:24:26 - Deque\n01:30:42 - Map\n01:48:49 - Immutable Map\n01:52:25 - SortedMap\n01:58:01 - NavigableMap\n02:04:04 - Entry Map\n02:08:18 - Legacy Collection\n02:16:26 - Sorting\n02:20:34 - Binary Search\n02:26:55 - Collections Class\n02:31:08 - Abstract Collection\n02:38:07 - Default Method\n02:46:54 - Spliterator\n02:52:48 - Konversi ke Array\n02:55:25 - Materi Selanjutnya\n"))),(0,i.kt)("h3",{id:"java-lambda"},"Java Lambda"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Daftar Materi : Java Lambda"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"00:00:00 - Pendahuluan\n00:01:49 - Pengenalan Lambda\n00:07:32 - Membuat Lambda\n00:13:12 - Java Util Function\n00:23:35 - Method Reference\n00:35:31 - Lambda di Collection\n00:48:52 - Lambda Sebagai Lazy Parameter\n00:55:16 - Lambda di Optional\n01:07:29 - Materi Selanjutnya\n"))),(0,i.kt)("h3",{id:"apache-maven"},"Apache Maven"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Daftar Materi : Apache Maven"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"00:00:00 - Pendahuluan\n00:02:17 - Pengenalan Build Automation\n00:08:10 - Menginstall Apache Maven\n00:13:36 - Membaut Project\n00:18:51 - Struktur Project\n00:24:50 - Maven Lifecycle\n00:29:10 - Build Project\n00:32:08 - Dependency\n00:41:01 - Maven Properties\n00:43:48 - Membuat Distribution File\n00:50:13 - Multi Module Project\n00:59:41 - Dependency Management\n01:05:44 - Materi Selanjutnya\n"))),(0,i.kt)("h3",{id:"java-unit-test"},"Java Unit Test"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Daftar Materi : Java Unit Test"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"00:00:00 - Pendahuluan\n00:02:15 - Pengenalan Software Testing\n00:11:15 - Pengenalan JUnit\n00:17:18 - Membuat Test\n00:24:18 - Menggunakan Assertions\n00:34:35 - Mengubah Nama Test\n00:43:24 - Menonaktifkan Test\n00:46:09 - Sebelum dan Setelah Test\n00:51:52 - Membatalkan Test\n00:56:10 - Menggunakan Assumptions\n01:00:02 - Test Berdasarkan Kondisi\n01:14:36 - Menggunakan Tag\n01:19:59 - Urutan Eksekusi Test\n01:30:02 - Siklus Hidup Test\n01:36:11 - Test di dalam Test\n01:41:25 - Informasi Test\n01:44:23 - Dependency Injection di Test\n01:51:50 - Pewarisan di Test\n01:55:29 - Test Berulang\n02:00:54 - Test dengan Parameter\n02:08:23 - Timeout di Test\n02:11:09 - Eksekusi Test Secara Paralel\n02:16:00 - Pengenalan Mocking\n02:25:32 - Mocking di Test\n02:36:27 - Verifikasi di Mocking\n02:43:40 - Materi Selanjutnya\n"))),(0,i.kt)("h3",{id:"java-stream"},"Java Stream"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Daftar Materi : Java Stream"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"00:00:00 - Pendahuluan\n00:02:16 - Pengenalan Java Stream\n00:09:00 - Membuat Stream\n00:29:39 - Stream Builder\n00:33:50 - Stream Operations\n00:40:35 - Stream Pipeline\n00:46:09 - Lazy Evaluation\n00:55:40 - Transformation Operations\n01:02:25 - Filtering Operations\n01:07:22 - Retrieving Operations\n01:16:21 - Ordering Operations\n01:19:36 - Aggregate Operations\n01:29:32 - Check Operations\n01:34:04 - For Each Operations\n01:39:49 - Primitive Stream\n01:47:17 - Collectors\n01:57:32 - Grouping By\n02:05:24 - Parallel Stream\n02:11:44 - Materi Selanjutnya\n"))),(0,i.kt)("h3",{id:"java-database"},"Java Database"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Daftar Materi : Java Database"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"00:00:00 - Pendahuluan\n00:02:05 - Pengenalan JDBC\n00:05:50 - Membuat Project\n00:10:12 - Driver\n00:20:02 - Connection\n00:36:32 - DataSource\n00:55:25 - Statement\n01:10:39 - ResultSet\n01:18:20 - SQL Injection\n01:29:02 - PreparedStatement\n01:40:21 - Batch Process\n01:55:25 - Auto Increment\n02:04:23 - Date, Time dan Timestamp\n02:14:09 - Database Transaction\n02:37:08 - Repository Pattern\n03:00:43 - Materi yang Tidak Dibahas\n03:04:19 - Materi Selanjutnya\n"))),(0,i.kt)("h3",{id:"studi-kasus-java-database--aplikasi-todolist"},"Studi Kasus Java Database : Aplikasi Todolist"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Daftar Materi : Studi Kasus Java Database : Aplikasi Todolist"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"00:00:00 - Pendahuluan\n00:02:07 - Membuat Project Maven\n00:10:46 - Membuat Table\n00:12:51 - Membuat Koneksi Database\n00:20:19 - Repository : Menambah Todolist\n00:25:42 - Test Repository : Menambah Todolist\n00:30:14 - Repository : Menghapus Todolist\n00:35:05 - Test Repository : Menghapus Todolist\n00:37:01 - Repository : Menampilkan Todolist\n00:42:34 - Test Repository : Menampilkan Todolist\n00:44:54 - Test Semua Aplikasi\n00:48:31 - Materi Selanjutnya\n"))),(0,i.kt)("h3",{id:"java-internationalization"},"Java Internationalization"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Daftar Materi : Java Internationalization"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"00:00:00 - Pendahuluan\n00:02:10 - Pengenalan Internationalization\n00:06:26 - Locale\n00:22:07 - Resource Bundle\n00:40:03 - I18N di Date dan Time\n00:54:12 - I18N di Number\n01:01:06 - I18N di Currency\n01:09:46 - Message Format\n01:19:37 - Message Format Type\n01:29:32 - Choice Format\n01:39:00 - Materi Selanjutnya\n"))),(0,i.kt)("h3",{id:"java-date-dan-time"},"Java Date dan Time"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Daftar Materi : Java Date dan Time"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"00:00:00 - Pendahuluan\n00:02:01 - Pengenalan Date dan Time API\n00:09:01 - Date\n00:21:45 - Calendar\n00:32:31 - TimeZone\n00:42:58 - LocalDate\n00:56:51 - LocalTime\n01:04:34 - LocalDateTime\n01:18:32 - Year YearMonth dan MonthDay\n01:28:31 - ZoneId dan ZoneOffset\n01:36:35 - ZonedDateTime\n01:48:17 - OffsetTime dan OffsetDateTime\n01:58:55 - Instant\n02:12:58 - Clock\n02:25:25 - Duration\n02:33:33 - Period\n02:39:59 - Temporal\n03:04:20 - DayOfWeek\n03:06:58 - Parsing dan Formatting\n03:21:14 - Legacy Date dan Time\n03:27:11 - Materi Selanjutnya\n"))),(0,i.kt)("h3",{id:"java-thread"},"Java Thread"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Daftar Materi : Java Thread"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"00:00:00 - Pendahuluan\n00:02:12 - Pengenalan Concurrency\n00:14:36 - Membuat Project\n00:17:30 - Thread\n00:47:57 - Race Condition\n00:54:44 - Synchronization\n01:05:02 - Deadlock\n01:16:54 - Thread Communication\n01:28:50 - Timer\n01:34:03 - High Level Concurrency Object\n01:37:32 - Threadpool\n02:01:44 - Executor Service\n02:13:09 - Future\n02:33:35 - Completable Future\n02:48:41 - Completion Service\n02:58:38 - Scheduled Executor Service\n03:07:41 - Atomic\n03:13:58 - Lock\n03:30:25 - Synchronizer\n03:31:56 - Semaphore\n03:39:45 - Count Down Latch\n03:46:15 - Cyclic Barrier\n03:51:22 - Phaser\n04:01:56 - Exchanger\n04:07:32 - Concurrent Collection\n04:09:35 - Blocking Queue\n04:37:26 - Concurrent Map\n04:46:26 - Thread Local\n04:57:39 - Thread Local Random\n05:05:23 - Fork Join\n05:34:54 - Parallel Stream\n05:40:25 - Reactive Stream\n06:13:56 - Materi Selanjutnya\n"))),(0,i.kt)("h3",{id:"java-reflection"},"Java Reflection"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Daftar Materi : Java Reflection"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"00:00:00 - Pendahuluan\n00:01:46 - Pengenalan Java Reflection\n00:04:48 - Membuat Project\n00:07:42 - Class\n00:20:04 - Field\n00:31:21 - Method\n00:38:59 - Parameter\n00:46:08 - Constructor\n00:53:25 - Super Class\n00:57:01 - Interface\n01:02:33 - Modifier\n01:06:22 - Package\n01:11:58 - Annotation\n01:25:23 - Enum\n01:30:27 - Primitive Type\n01:38:38 - Array\n01:47:31 - Parameterized Type\n02:01:04 - Proxy\n02:10:49 - Record\n02:18:52 - Materi Selanjutnya\n"))),(0,i.kt)("h3",{id:"java-validation"},"Java Validation"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Daftar Materi : Java Validation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"00:00:00 - Pendahuluan\n00:02:08 - Pengenalan Bean Validation\n00:09:21 - Membuat Project\n00:15:02 - Validator\n00:22:16 - Constraint\n00:31:44- Constraint Validator\n00:44:31 - Nested Validation\n00:51:00 - Hibernate Validator Constarint\n01:00:13 - Grouping Constraint\n01:10:47 - Group SEquence\n01:15:53 - Group Conversion\n01:22:26 - Payload\n01:30:32 - Method Validation\n01:40:15 - Constructor Validation\n01:46:57 - Message Interpolation\n01:57:43 - Message Internationalization\n02:08:46 - Custom Constraint\n02:19:23 - Constraint Composition\n02:28:30 - Class Level Constraint\n02:36:53 - Cross Parameter Constraint\n02:47:14 - Constraint Validator Context\n02:51:59 - Constraint Descriptor\n02:55:59 - Container Data\n03:02:30 - Value Extraction\n03:24:23 - Constraint Violation Exception\n03:27:56 - Metadata\n03:31:36 - Materi Selanjutnya\n"))),(0,i.kt)("h3",{id:"java-lombok"},"Java Lombok"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Daftar Materi : Java Lombok"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"00:00:00 - Pendahuluan\n00:01:37 - Pengenalan Lombok\n00:04:24 - Membuat Project\n00:06:32 - Getter dan Setter\n00:13:23 - Constructor\n00:25:43 - ToString\n00:29:31 - Equals dan HashCode\n00:37:05 - Data\n00:42:33 - Builder\n00:51:13 - Non Null\n00:59:18 - Value\n01:02:02 - With\n01:06:03 - Cleanup\n01:12:16 - Sneaky Throws\n01:17:33 - Log\n01:20:53 - Synchronized\n01:26:36 - Experimental Feature\n01:28:01 - Materi Selanjutnya\n"))),(0,i.kt)("h3",{id:"java-logging"},"Java Logging"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Daftar Materi : Java Logging"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"00:00:00 - Pendahuluan\n00:01:33 - Pengenalan Logging\n00:05:29 - Logging Library\n00:11:10 - Membuat Project\n00:12:23 - Logger\n00:20:44 - Level\n00:26:47 - Log Format\n00:31:54 - Configuration\n00:42:15 - Appender\n00:55:34 - Layout\n01:00:28 - Mapped Diagnostic Context\n01:15:09 - Materi Selanjutnya\n"))),(0,i.kt)("h3",{id:"java-persistence-api"},"Java Persistence API"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Daftar Materi : Java Persistence API"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"Segera Hadir, GRATIS untuk yang sudah gabung!\n"))),(0,i.kt)("h3",{id:"java-web"},"Java Web"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Daftar Materi : Java Web"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"Segera Hadir, GRATIS untuk yang sudah gabung!\n"))),(0,i.kt)("h3",{id:"java-restful-api"},"Java RESTful API"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Daftar Materi : Java RESTful API"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"Segera Hadir, GRATIS untuk yang sudah gabung!\n"))))}c.isMDXComponent=!0},6006:function(a,n,e){n.Z=e.p+"assets/images/java-d7d5aa53179e705bc3b15c012fa058f7.jpg"},3811:function(a,n,e){n.Z=e.p+"assets/images/ReviewJava-69e1251775558308840ffd1e20d57557.jpg"}}]);